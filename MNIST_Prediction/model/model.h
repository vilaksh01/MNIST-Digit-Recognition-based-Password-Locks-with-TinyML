#ifndef NEUTON_MODEL_MODEL_H
#define NEUTON_MODEL_MODEL_H

#ifdef __cplusplus
extern "C"
{
#endif

/* Model info */
#define NEUTON_MODEL_HEADER_VERSION 3
#define NEUTON_MODEL_QLEVEL 32
#define NEUTON_MODEL_FLOAT_SUPPORT 1
#define NEUTON_MODEL_TASK_TYPE 0  // multiclass classification
#define NEUTON_MODEL_NEURONS_COUNT 79
#define NEUTON_MODEL_WEIGHTS_COUNT 561
#define NEUTON_MODEL_INPUTS_COUNT 784
#define NEUTON_MODEL_INPUT_LIMITS_COUNT 784
#define NEUTON_MODEL_OUTPUTS_COUNT 10
#define NEUTON_MODEL_LOG_SCALE_OUTPUTS 0
#define NEUTON_MODEL_HAS_CLASSES_RATIO 0
#define NEUTON_MODEL_HAS_NEGPOS_RATIO 0

/* Preprocessing */
#define NEUTON_PREPROCESSING_ENABLED 0
#define NEUTON_DROP_ORIGINAL_FEATURES 0
#define NEUTON_BITMASK_ENABLED 1
#define NEUTON_MODEL_SA_PRECISION 24

/* Types */
typedef float input_t;
typedef float extracted_feature_t;
typedef float coeff_t;
typedef float weight_t;
typedef double acc_signed_t;
typedef double acc_unsigned_t;
typedef uint16_t sources_size_t;
typedef uint16_t weights_size_t;
typedef uint8_t neurons_size_t;

/* Limits */
static const input_t modelInputMin[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
static const input_t modelInputMax[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 };

static const uint8_t modelUsedInputsMask[] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0xc8, 0x27, 0x00, 0x48,
	0x55, 0x0c, 0x70, 0x58, 0x1a, 0x01, 0x5e, 0x1f, 0x09, 0x90, 0x35, 0x8c,
	0x83, 0xa8, 0x5d, 0x9c, 0x00, 0x60, 0x1e, 0x43, 0x20, 0xbf, 0x7f, 0xc0,
	0xbe, 0x73, 0x03, 0xd4, 0xed, 0x4f, 0xa4, 0x7f, 0xa1, 0x01, 0x78, 0x7e,
	0x3e, 0x20, 0x66, 0x0c, 0x80, 0x28, 0x59, 0x10, 0x30, 0xdd, 0x1a, 0xc2,
	0xf4, 0x22, 0x69, 0x28, 0xfe, 0x28, 0x00, 0x82, 0xf3, 0x11, 0x00, 0x3b,
	0x15, 0xc5, 0x14, 0x88, 0x28, 0x48, 0x39, 0x04, 0x01, 0xf6, 0x7f, 0x00,
	0x40, 0xd8, 0x40, 0x00, 0xb6, 0xb5, 0x01, 0x00, 0xd9, 0x25, 0x00, 0x08,
	0x04, 0x00 };

/* Structure */
static const weight_t modelWeights[] = {
	0.51381075, 0.4236047, -0.41390845, 0.88365173, -0.412893, 0.90626526,
	-0.026958466, 0.81722945, -0.65783399, 0.77109963, 0.82869828, 0.67832023,
	0.1875, 0.93749875, -0.083009601, 0.37830666, 0.28572237, 1, -0.63500595,
	-0.28217885, -0.47281024, 0.084259033, 0.4169524, -0.60720992, 0.91642398,
	0.67403442, -0.75683004, 0.74521363, 0.66067505, 0.64271355, 0.34414703,
	-0.27613732, -0.21360557, 0.46106008, 0.67090684, 0.06842041, -0.11164999,
	-0.3569783, -0.74937546, 0.46312243, 1, 0.1135091, 0.065940857, 0.52204567,
	0.39379603, -0.2294369, -0.32223642, 0.52994615, 0.99999917, 0.2053833,
	0.9999994, 1, -0.55358177, 0.7719115, 0.75757861, 0.68615937, 0.93837053,
	-0.125, -0.30984205, -0.19522397, -0.3060112, -0.038490344, -0.36193788,
	0.92968464, -0.83673525, 0.69290072, 0.39199251, 0.43083626, 0.67558539,
	-0.83002764, 0.99890018, -0.28894842, -0.34591907, -0.5647077, 0.99945867,
	0.25634617, 0.28258318, -0.42002407, -0.54708838, -0.022729235, -0.14912033,
	0.359375, 0.14147034, 0.98315382, 1, -1, 0.5, 1, 1, 0.5, -0.89864928, -0.47067851,
	0.30312449, -0.78941256, 0.43885735, -0.52681482, -1, -0.77258301, -0.48610741,
	0.48516792, 0.3984375, -0.94431424, 1, 0.97120714, 0.57861066, 0.38226247,
	0.86474568, -1, -0.20461877, -0.00075790286, 0.48293701, 0.34241551, 1,
	0.30464759, 0.70202607, 0.66895819, -0.37756348, -0.5, -1, -1, -1, 0.21969762,
	0.25, -0.76705402, -0.40902805, 0.21548872, -0.42063472, 0.80819148, 0.95629883,
	-0.40224004, 0.98194885, 0.98976135, 1, 0.39839578, 0.97950745, 0.99853897,
	0.0049438477, -0.86339003, -0.75, 0.39230326, 0.87301141, 0.99999046, 0.759552,
	0.7122696, 0.99999809, -0.68072307, 0.70418715, 0.058105469, 0.82540536,
	-0.21916425, -0.56571662, 0.17828196, 0.65967739, 0.99999964, 0.0050969124,
	0.84073097, -0.50072098, -0.15407787, -1, -0.54524267, -0.21459867, 0,
	-0.28020397, -0.25375453, -0.99985689, -0.18114015, 0, -0.32271147, -0.009223938,
	-0.44867817, 0.36842528, -0.42643753, -0.3296507, 0.99999928, 0.20507622,
	-0.44057301, -0.007138487, 0.99717367, 0.30604374, 0.72122097, 0.74865341,
	0.10703278, -0.92584801, -0.15102239, -0.3176946, -0.27840838, -1, -0.53714716,
	0.99999976, 0.17119694, -1, -0.081368208, -0.999991, -0.70585471, -0.54034489,
	-1, -1, 0.51623535, 0.0019840479, 0.4595862, -0.43061721, 0.42993873, 1,
	-0.56250054, 0.30884245, -0.15646586, -0.3784059, -1, -0.31344214, 0.5,
	-0.50227356, -1, 0.33426842, 0.69306707, 0.67257237, -0.3095032, -0.5,
	-0.25137776, 1, 1, -0.17381217, -0.25571635, 0.15513463, 0.99998277, 1,
	-0.66847199, -0.2720789, -0.41393977, 1, -0.59309113, -0.60708112, 0.95344138,
	-0.48354557, 0.4533557, -0.70040411, -0.87500048, -0.99986988, -0.20741697,
	-1, -0.23922886, -0.080840111, 0.047775283, 0.96855855, 0.99999964, 1,
	-0.33239698, 0.19129726, 0.28888446, -0.096557617, 0.92234468, 0.66601574,
	-0.64460325, -0.3875339, -0.2613087, 0.85975361, -0.26598549, -0.32103479,
	0.55761158, 0.19820762, 0.38186014, 0.96094513, 0.64306641, -0.0053100586,
	-0.97076219, 0, 0.36412305, 0.38895234, -1, -1, -0.0022034645, -0.99999988,
	0.98828173, -0.51144767, -0.7047869, -0.081165612, 0.54296798, -0.7084797,
	-0.36627883, 0.99999988, -0.81250048, -0.69282454, -0.39182734, 0.3666358,
	-0.30434036, 0.34624517, 0.99810153, -0.66118169, 0.9999972, -0.29850045,
	0.40369621, -0.51147461, 0, 1, -0.22992596, 1, 0.25346261, 0.99999237,
	-0.57405156, 0.99999988, -0.0077438354, 0.5, 0, -0.5, -1, -1, 0, -0.85549611,
	-0.31233588, -0.20785064, -0.17576712, -0.37508854, 0.059202671, 0.51202166,
	-0.20346151, -0.1783689, -0.81250763, -0.14658311, 1, 0.95488244, -0.72015381,
	0.10670471, -0.99609363, -0.59538925, 1, 0.91415912, -0.25571913, 0.22517297,
	1, 1, 0.953125, -0.35577428, -0.093165211, -0.4375, 0, 1, -0.45268995,
	-0.7968623, -0.76257235, -0.23136747, -0.48505846, 0.5, 0.3084535, 0.54813743,
	0.33093444, -0.37656975, -0.3233085, 0.37732536, -0.30993652, -0.98687434,
	0.58531308, -0.55269599, 0.47888771, -0.11852925, 0.66619873, 0, 0.53013444,
	-0.42014685, -0.38977367, -1, -1, -0.53250122, 0, 0.95730662, 0.86301517,
	-1, -0.23253798, -0.21359935, 0.42412317, -0.1162262, -0.21381849, 0.33814645,
	0, -0.99999964, -0.2752471, -0.27035493, 0.22644043, 0.40445298, -0.41931868,
	-0.60842085, -1, 0.25482526, -1, -0.27761841, -0.27858275, -0.18963891,
	-0.63978672, -0.26096457, -0.4173311, 0.28304362, -0.37185985, -0.35241753,
	0.16106486, 0.23939437, 0.15638079, 0.70135736, -0.95111525, -0.89083505,
	-1, -0.78584433, -0.75, 0, -0.42743325, 0.93602586, 0.60128164, 0.73920166,
	0.51774383, -0.34999251, -0.74247408, 0.68786621, 0.02722168, 1, -0.22890171,
	0.97612751, -0.64812475, -0.70130956, -0.36208251, 0.26171875, -0.85135788,
	0.082542866, -0.1526335, -0.14325741, -0.096071452, -1, 0.044306755, -0.54109257,
	-0.63652778, -0.5302552, 0.54209197, 1, -0.99580383, 0.32542574, 0.4822126,
	0.21253684, -0.81340587, 0.13682751, -0.25430125, -0.24593818, 0.94437027,
	0.2595253, -0.75, -0.36314282, 0.41479197, -0.6117844, -0.30499971, -0.25553194,
	0.625, -0.5, 0.5, -0.5, 1, -0.5, -0.5, -0.63504159, -0.66188979, -0.50621295,
	-0.51490837, -0.44342831, -1, 0.49462855, -0.27234259, -0.93042815, 0.63254714,
	-0.94373941, -0.22849078, 0.26751432, -0.84449506, -0.16442946, 0.22419024,
	0.80766308, -0.25689894, 0.9999752, -0.090772472, 0.99998504, 0.12973823,
	-0.53481883, -0.088256836, 0.99999988, 1, 0.97030026, -0.60021859, -0.28732675,
	0.3127934, -0.04651165, 1, -0.68980592, -0.36422682, -0.80639988, 0.84375,
	0.28125, 0.99999851, 0.186249, -0.1825114, -0.99999923, -0.42489535, -0.12545776,
	-0.77844882, -0.8749938, 0.55240059, -0.65937901, 0.99938679, -0.013696671,
	-0.47333631, -0.30018318, -1, -0.83033013, -0.61325145, -0.3836689, -0.9294591,
	-0.33815941, 0.63109171, 0.64605761, -0.086472884, -0.53871983, -1, -0.99999607,
	-0.70438683, -0.033050537, -0.92495477, 0.21405067, 0.098864891, -0.052761629,
	-1, -0.15316772, -0.023672104, -0.14964747, 0.33165485, -1, -1, -0.22218879,
	0, -0.93229377, 0.52802843, -0.55413771, -1, 0.50824535, 0.99999964, -0.55892944,
	-1, -1, -1, -0.97170657, -0.12067421, -0.984375, 0, -0.11737587, -1, -0.11831066,
	0.62765932, -1, -1, -0.11137275, 0.03704834, -0.48697382, 0.34226099, 0.81176066,
	0.45465797, 0.50355268, -1, 0.34881419, 0.34771416, -0.38335872 };

static const sources_size_t modelLinks[] = {
	380, 406, 456, 462, 482, 717, 784, 205, 322, 374, 411, 493, 502, 509, 784,
	346, 349, 371, 556, 568, 611, 784, 106, 178, 220, 289, 350, 489, 784, 98,
	238, 401, 456, 569, 622, 784, 160, 219, 277, 327, 330, 544, 784, 218, 242,
	496, 576, 658, 716, 784, 72, 156, 269, 377, 432, 456, 509, 784, 405, 460,
	514, 629, 657, 784, 2, 4, 150, 155, 191, 210, 784, 274, 292, 345, 427,
	708, 784, 2, 5, 594, 627, 712, 714, 784, 301, 378, 382, 556, 584, 784,
	1, 12, 784, 153, 350, 456, 473, 515, 580, 653, 784, 1, 163, 397, 486, 514,
	556, 678, 465, 518, 578, 655, 736, 739, 740, 744, 784, 3, 268, 272, 276,
	345, 784, 2, 132, 244, 572, 652, 784, 14, 123, 126, 131, 160, 163, 193,
	784, 7, 19, 784, 19, 124, 131, 203, 278, 381, 444, 784, 277, 456, 458,
	628, 684, 720, 784, 77, 146, 205, 327, 328, 352, 784, 132, 187, 241, 295,
	619, 660, 784, 4, 248, 543, 603, 719, 784, 0, 22, 24, 660, 687, 749, 784,
	14, 293, 318, 320, 341, 344, 586, 784, 388, 453, 499, 525, 537, 607, 662,
	784, 212, 467, 519, 634, 709, 784, 70, 314, 344, 347, 380, 465, 784, 8,
	118, 401, 485, 657, 784, 74, 77, 192, 486, 545, 591, 711, 719, 2, 14, 26,
	27, 28, 29, 30, 32, 784, 23, 27, 96, 156, 212, 295, 552, 784, 27, 67, 91,
	436, 613, 712, 784, 94, 181, 218, 347, 463, 746, 784, 5, 23, 694, 742,
	743, 770, 784, 34, 116, 117, 147, 573, 658, 784, 23, 305, 372, 402, 484,
	784, 4, 16, 34, 35, 36, 37, 38, 39, 784, 17, 36, 47, 295, 345, 650, 784,
	71, 152, 276, 300, 304, 379, 640, 784, 8, 199, 549, 552, 594, 784, 14,
	172, 265, 322, 683, 784, 145, 261, 264, 286, 458, 479, 507, 517, 784, 29,
	35, 136, 275, 624, 784, 71, 74, 254, 427, 486, 516, 784, 118, 571, 596,
	650, 659, 661, 784, 12, 45, 107, 380, 435, 523, 784, 11, 248, 266, 389,
	551, 686, 784, 42, 271, 272, 302, 357, 662, 784, 27, 34, 334, 348, 432,
	706, 784, 296, 319, 338, 373, 438, 516, 784, 180, 237, 429, 452, 550, 596,
	784, 8, 10, 47, 48, 49, 50, 51, 52, 53, 54, 784, 212, 323, 379, 435, 519,
	714, 784, 0, 17, 39, 45, 48, 243, 359, 709, 784, 147, 154, 176, 386, 513,
	537, 784, 27, 102, 208, 318, 654, 705, 784, 6, 18, 22, 23, 24, 25, 31,
	59, 784, 56, 223, 265, 267, 590, 784, 0, 11, 56, 57, 58, 61, 784, 148,
	186, 297, 473, 708, 784, 3, 15, 41, 42, 43, 44, 45, 46, 63, 784, 7, 322,
	410, 459, 515, 784, 34, 48, 102, 343, 501, 656, 744, 784, 27, 129, 249,
	287, 290, 468, 784, 199, 207, 265, 410, 550, 784, 96, 248, 326, 423, 719,
	784, 34, 211, 214, 273, 444, 784, 9, 21, 65, 66, 67, 68, 69, 70, 784, 275,
	379, 380, 388, 411, 496, 784, 52, 63, 289, 459, 478, 487, 784, 46, 218,
	329, 360, 462, 784, 100, 180, 291, 316, 649, 763, 784, 67, 73, 242, 265,
	548, 716, 784, 43, 175, 325, 331, 385, 387, 485, 784, 5, 17, 72, 73, 74,
	75, 76, 77, 784 };

static const weights_size_t modelIntLinksBoundaries[] = {
	0, 7, 15, 22, 29, 36, 43, 50, 58, 66, 71, 79, 84, 92, 93, 102, 108, 118,
	124, 130, 139, 141, 148, 155, 162, 170, 178, 183, 190, 198, 204, 212, 217,
	233, 236, 243, 249, 258, 264, 271, 284, 287, 292, 301, 307, 312, 323, 327,
	334, 343, 349, 356, 364, 369, 376, 393, 394, 406, 410, 418, 432, 434, 445,
	446, 461, 463, 470, 477, 483, 489, 496, 509, 510, 519, 525, 530, 537, 545,
	560 };
static const weights_size_t modelExtLinksBoundaries[] = {
	7, 15, 22, 29, 36, 43, 50, 58, 64, 71, 77, 84, 90, 93, 101, 108, 117, 123,
	129, 137, 140, 148, 155, 162, 169, 175, 182, 190, 198, 204, 211, 217, 225,
	234, 242, 249, 256, 263, 270, 276, 285, 292, 300, 306, 312, 321, 327, 334,
	341, 348, 355, 362, 369, 376, 383, 394, 401, 410, 417, 424, 433, 439, 446,
	452, 462, 468, 476, 483, 489, 495, 501, 510, 517, 524, 530, 537, 544, 552,
	561 };

static const coeff_t modelFuncCoeffs[] = {
	3.8454962, 5.501502, 7.8412185, 2.7544806, 5.9337683, 15.987917, 5.0710621,
	3.6458015, 8.8214283, 16.663712, 25.037186, 30.024992, 40, 8.1656094, 2.558743,
	4.4864373, 21.296875, 30.024971, 5.6150475, 20.050001, 7.62113, 16.936462,
	18.803127, 13.580011, 11.32173, 4.0768495, 37.506279, 5.4089608, 11.633249,
	12.479254, 30.025, 12.568673, 12.685644, 6.2783637, 14.223423, 6.8762312,
	7.2910357, 24.803711, 39.999992, 36.882812, 7.6676283, 4.3623891, 28.778126,
	30.025002, 6.6190014, 24.725744, 28.154644, 28.817091, 16.692327, 7.6123023,
	2.4635472, 3.7237306, 7.9879479, 10.074988, 6.197998, 12.007183, 9.2956238,
	2.7763982, 3.9891648, 15.745604, 8.3336067, 20.0499, 10.011683, 15.062501,
	6.3203697, 40, 12.568733, 25.037468, 31.737629, 6.3343754, 37.817924, 6.1534023,
	26.284374, 15.521818, 8.2669411, 32.518749, 17.556252, 22.738575, 8.295557 };
static const uint8_t modelFuncTypes[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0 };

static const neurons_size_t modelOutputNeurons[] = {
	62, 13, 33, 64, 40, 78, 60, 20, 55, 71 };

#ifdef __cplusplus
}
#endif

#endif // NEUTON_MODEL_MODEL_H

